{
  "name": "h5bp",
  "description": "HTML5 boilerplate (H5BP) inspired server config for node.js",
  "version": "0.0.7",
  "author": {
    "name": "Sean Caetano Martin",
    "email": "seancaetanomartin@gmail.com"
  },
  "contributors": [
    {
      "name": "Nicolas Gryman",
      "email": "ngryman@gmail.com"
    },
    {
      "name": "Nick Baugh",
      "email": "niftylettuce@gmail.com"
    },
    {
      "name": "Benjamin Tan",
      "email": "demoneaux@gmail.com"
    }
  ],
  "scripts": {
    "test": "mocha test --reporter dot --globals requirejsVars --bail"
  },
  "keywords": [
    "h5bp",
    "html5",
    "boilerplate",
    "express",
    "connect",
    "server",
    "config",
    "goodness"
  ],
  "homepage": "https://github.com/h5bp/node-server-config",
  "repository": {
    "type": "git",
    "url": "https://github.com/h5bp/node-server-config.git"
  },
  "engines": {
    "node": "0.10.x",
    "npm": "1.1.x"
  },
  "main": "lib/h5bp",
  "dependencies": {
    "express": "~3.3.1",
    "async": "0.2.x",
    "webmake": "~0.3.14",
    "requirejs": "~2.1.5",
    "node-sass": "~0.4.3",
    "less": "~1.3.3",
    "stylus": "~0.32.1",
    "uglify-js": "~2.3.6",
    "clean-css": "~1.0.10"
  },
  "devDependencies": {
    "mocha": "~1.11",
    "chai": "~1.7",
    "supertest": "~0.7",
    "connect": "~2.8"
  },
  "readme": "# [H5BP](http://h5bp.github.com) <sup>[![Version Badge](http://vb.teelaun.ch/h5bp/node-server-config.svg#0.0.7)](https://npmjs.org/package/h5bp)</sup>\n\n**HTML5 boilerplate** (H5BP) server config for node.js.\n\n[![Build Status](https://secure.travis-ci.org/h5bp/node-server-config.png)](http://travis-ci.org/h5bp/node-server-config)\n[![Build Status](https://gemnasium.com/ngryman/node-server-config.png)](https://gemnasium.com/ngryman/node-server-config)\n\n`h5bp` for node.js follows the guidelines of the [Apache] version:\n - secures backup and hidden files.\n - optionally redirects `www.yoursite.tld` to `yoursite.tld` or `yoursite.tld` to `www.yoursite.tld`.\n - offers a simple cache busting mechanism.\n - normalize content types.\n - optionally enables CORS.\n - sets correct cache expires depending of the type of resource.\n - and some others...\n\nIt also focuses on offering additional features such as on-the-fly script concatenation using **CommonJS** or **AMD**.\n\n[Apache]: https://github.com/h5bp/server-configs/tree/master/apache\n\n### Next release focus (v0.0.8)\n\n - refactoring code and tests.\n - responsive images: #13.\n\n## Installation\n\n```bash\nnpm install h5bp\n```\n\n## Quick Start\n\n### Create a simple http server\n\n```javascript\nvar h5bp = require('h5bp');\n\nvar app = h5bp.createServer({ root: __dirname + '/public' });\napp.listen(3000);\n```\n\n`app` is an instance of an `express` application. You can add additional middlewares or routes if you like.\n\n### Use it as a connect / express middleware\n\n```javascript\nvar express = require('express'),\n    h5bp = require('h5bp');\n\nvar app = express();\napp.use(h5bp({ root: __dirname + '/public' }));\n\n// in order to serve files, you should add the two following middlewares\napp.use(express.compress());\napp.use(express.static(__dirname + '/public'));\napp.listen(3000);\n```\n\n### Concatenate scripts on-the-fly\n\nIf you want to split your application source files but only serve one file, you can use the on-the-fly concatenation.\nIf you are familiar with node.js, you can use the **CommonJS** style. You can also use the **AMD** style.\n\n```javascript\napp.use(h5bp({\n    root: __dirname + '/public',\n    scripts: {\n        files: ['app.js'],\n        processor: 'commonjs'   // can also be \"amd\"\n    }\n}));\n```\n\nAt the first request hit to `/app.js`, the server will compile, cache and serve the file. Any subsequent request will\nserve the cached file without any performance impact.\n\nSo, this feature is meant to be used with the [cache busting mechanism] in order to ensure the client always has the\nlatest resource version. If you restart your server, the cache will be flushed.\n\nNote that the next release will provide a *development mode* where the server will simply disable its cache and\nalways serve the latest version of the file.\n\n[cache busting mechanism]: https://github.com/h5bp/server-configs/tree/master/apache#cache-busting\n\n## Options\n\nThere are several options you can pass to the middleware.\n\n`app.use(h5bp(options));`\n\n### root\n\nTells the filesystem path to the root directory of static resources. This options is mandatory if you serve static files.\n\n### www\n\nForces **www** if `true`, forces **non-www** if `false`, does nothing if not defined. By default, this is disabled.\n\n### cors\n\nEnables **CORS** for everything. By default this is disabled.\n\n### scripts\n\nTells which scripts to concatenate.\n\nThis is an object with the following properties:\n\n#### files\n\nThis is an array of files to concatenate. Their path is relative to the `root` option. Their URL will be absolute.\n\nFor example, if you set **files** to `['scripts/app.js']` and **root** to `/home/h5bp/app/`:\n - The path will be: `/home/h5bp/app/scripts/app.js`.\n - The served URL will be: `yoursite.tld/scripts/app.js`.\n\n#### processor\n\nTells which processor to use for scripts concatenation.\n\nFor now, it can be one of the following values:\n - `commonjs`: will concatenate files using the **CommonJS** method (`require/exports`).\n - `amd`: will concatenate files using the **AMD** method (`require/define`).\n\n## Additional options\n\nThe `h5bp.createServer` function takes the same options, plus additional ones.\n\nThe `callback` is optional. It is a custom middleware that you can register directly if you want to.\n\n`h5bp.createServer(options, [callback]);`\n\n### server\n\nTells which type of server you want to use.\n\nIt can be one of the following values:\n - `express`: uses **express**, this is the default value.\n - `connect`: uses **connect**.\n\n### logger\n\nTells if you want to log server requests or not. This can also be an object containing [logger options].\n\n[logger options]: http://www.senchalabs.org/connect/middleware-logger.html\n\n### compress\n\nTells if you want to serve `gzipped` content or not. By default this is `true`.\n\nIf you are using `h5bp` as a middleware, we strongly encourage you to use the `compress` middleware provided by\n**express** / **connect**.\n\n## Release notes\n\n```\nv0.0.7\n  - better mime type sniffing.\n  - on-th-fly sass, less and sytlus compilation.\n  - on-th-fly scripts compilation using commonjs or amd.\n  - on-th-fly scripts and stylesheets minification.\n  - various other minor bugs.\n```\n\n## Contributors\n\n```\n project  : node-server-config\n repo age : 2 years, 4 months\n active   : 67 days\n commits  : 123\n files    : 85\n authors  : \n    63\tNicolas Gryman          51,2%\n    17\txonecas                 13,8%\n     9\tNick Baugh              7,3%\n     8\tSean Caetano Martin     6,5%\n     7\tBenjamin Tan            5,7%\n     3\tClemens Stolle          2,4%\n     3\tsean                    2,4%\n     2\talrra                   1,6%\n     2\tAD7six                  1,6%\n     2  David Clarke            1.6%\n     2  Dean Gelber             1,6%\n     1\tMike Almond             0,8%\n     1\tDavid Murdoch           0,8%\n     1\tNicolas Gallagher       0,8%\n     1\tChad Smith              0,8%\n     1\tPrzemek Matylla         0,8%\n```\n\n### How to contribute?\n\nIf you want to contribute for a **bug** or an **enhancement**, please do it on `master`.\n`master` is our **stable** branch where releases and fixes land.\n\nIf you want to contribute for a **new feature**, please do it on `develop`.\n`develop` is our **mainline** where the next release is prepared.\n\nHere is the workflow overview:\n\n- Fork the repository.\n- Clone it.\n- Checkout the right branch.\n- Add your awesome contribution.\n- Test!\n- Push to **Github**.\n- Open a pull request to the right branch.\n\n### Always run tests\n\nThis project tries to be as **test driven** as possible.\nSo your contribution should always be covered by associated *functional test(s)*.\nThis ensure that what you are actually adding work as expected and do not break anything.\nWe use [Mocha] to run the tests and [Chai] as the assertion library.\n\nBefore pushing anything to **Github**, please ensure that all tests are passing.\n\nFrom the root of the project you can run tests like this:\n```bash\nnpm test\n```\n\n[Mocha]: http://visionmedia.github.io/mocha/\n[Chai]: http://chaijs.com/\n\n### Keeping your repo in sync\n\nPlease **rebase** instead of **merging**.\nThis is just to avoid having a lot of merge commits polluting the history of the project.\n\n```bash\n# this adds our repo as another remote, only the first time\ngit remote add h5bp git://github.com/whoever/whatever.git\n\n# fetches all branches from h5bp repo, only the first time\ngit fetch h5bp\n\n# make sure your have checkout the right branch\ngit checkout [master|develop]\n\n# rebase h5bp/master\ngit rebase h5bp/master\n```\n\nIf you are not comfortable with rebasing, please take a look at http://git-scm.com/book/en/Git-Branching-Rebasing\nor ask us some help :)\n\n### Squash your commits\n\nAt the end of your pull request review, you may have several commits in it.\nPlease squash all your commits into one with a clear message.\nThis is to have a clear history in the project when each commit is relevant to a **feature**, **enhancement** or **bug**.\n\nIf you are not comfortable with squashing commits, please take a look at http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html\nor ask us some help again :)\n\n### Thanks!\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/h5bp/node-server-config/issues"
  },
  "_id": "h5bp@0.0.7",
  "dist": {
    "shasum": "1f952e61d103490402d802b53b04f3df7c839e3a"
  },
  "_from": "h5bp@*",
  "_resolved": "https://registry.npmjs.org/h5bp/-/h5bp-0.0.7.tgz"
}
